title Josh & Mage Attack weak opponents then quits

actor User

User ->* main: start battleBatch.bat

activate main
activate main
note right of main:In this function, the user is prompted multiple times for their name, class, and level/number of allies and enemies
main->main: setDifficulty()
note right of main: In this instance, we will say that they create one ally and two enemies, and he chooses to be a fighter
main->RandomPlayer:randomFighter(3,"Josh")
activate RandomPlayer
RandomPlayer-->*Fighter:<<create>>
main<-RandomPlayer:
deactivate RandomPlayer
main->RandomPlayer: generateAllies(1,3)
activate RandomPlayer
note right of RandomPlayer: The generate Allies function has a 50/50 chance to generate a mage or fighter of level passed as second parameter
RandomPlayer->RandomPlayer:randomMage(3,"Allied Mage #1")
RandomPlayer-->*Mage:<<create>>
main<-RandomPlayer:
deactivate RandomPlayer

main->RandomEnemy: generateEnemies(2,1);
note over RandomPlayer:Here, there is a 20% chance that a Goblin Lord is created, in this scenario we will say one of the enemies is one

activate RandomEnemy
RandomEnemy->RandomEnemy: randomGoblin(1,"Goblin #1")
RandomEnemy-->*Goblin: <<create>>
RandomEnemy->RandomEnemy: randomGoblinLord(1,"Goblin Lord #1")
RandomEnemy-->*GoblinLord:<<create>>
main<-RandomEnemy:
deactivate RandomEnemy


deactivate main

main->main: battleLoop()
loop while (player.getHP() > 0 && enemies.size != 0)

main->Player: player.getHP()
deactivate main
activate Player
main<--Player:
deactivate Player
activate main


note left of main: 1) Attack 2) Special 3) Magic  4) Guard -1) Quit 0) Options
main->User: nextInt()
deactivate main
activate User
note right of User: For this simulation, User will always use the special attack DualSlash
User->main: 2
deactivate User
activate main

main->main: chooseTargetPosition
main->*Battler: useAction(enemy,"Attack")
Battler->*Attack: processAttack(player,enemy)
Attack->*DualSlash: calcDamage(player,enemy)
Attack<--DualSlash:
Battler<--Attack:
main<--Battler:
note over main: After the player attacks, then the allied mage attacks similarly with the attack Shock, the attack randomly chosen from its move pool
main->*Player:randomAttackPattern(enemy)
Player->Attack: processAttack(ally,enemy)
Attack->*Shock: getDamage(ally,enemy)
Shock<--Attack:
Player<--Attack:
main<--Player:

note over main: Now, it is the enemy's turn to attack.  The enemy attacks are random, but in this case they both use DesperateHit

loop for(Enemy enemy: enemies)
main->*Enemy: randomAttackPattern(player)
Enemy->Attack: processAttack(enemy,player)
Attack->*DesperateHit:getDamage(enemy,player)
Attack<--DesperateHit:
Enemy<--Attack:
main<--Enemy:
end

note over main: Now, at the beginning of the next loop, the player enters -1, so the game ends


deactivate main

end

destroysilent User
destroysilent main
destroysilent RandomPlayer
destroysilent RandomEnemy
destroysilent Fighter
destroysilent Mage
destroysilent Goblin
destroysilent GoblinLord
destroysilent Battler
destroysilent Attack
destroysilent DualSlash
destroysilent Player
destroysilent Shock
destroysilent Enemy
destroysilent DesperateHit